<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>User list</title>
        <style>
            #nonedata p {
                color: red;
                font-weight: bold;
            }

            table,
            td,
            th {
                border: 1px solid #595959;
                border-collapse: collapse;
            }

            th,td {
                padding: 3px;
                width: 30px;
                height: 25px;
                text-align: center;
            }
        </style>
    </head>
    <body>
        <table>
            <tr>
                <th>名前</th>
                <th>email</th>
                <th>更新</th>
                <th>削除</th>
            </tr>
        </table>
        <!--こちらに基礎課題で言われてる内容を記述しましょう。ここから-->
        <p>基礎課題2</p>
        <ul id="input_target">
            <li>
                <%= users[0].name %>
            </li>
            <li>
                <%= users[1].name %>
            </li>
            <li>
                <%= users[2].name %>
            </li>
            <li>
                <%= users[3].name %>
            </li>
            <li>
                <%= users[4].name %>
            </li>
        </ul>
        <p>基礎課題3</p>
        <p>name： <%= users[0].name %></p>
        <p>Email: <%= users[0].email %></p>
        <p id="textTag">ID検索</p>
        <h3>実務課題1</h3>
        <p>ID検索</p>
        <form action="/" method="GET" id="form">
            <label for="useId">User ID</label>
            <input type="text" id="inputvalue">
            <button type="button" id="serach_btn">検索</button>
        </form>
        <!-- User Details 61行目からのコードで名前・メールを取得している-->
        <p>名前：<div id="addname"></div></p>
        <p>Email:<div id="addmail"></div></p>
        <!-- データが一致しない時のみ表示 -->
        <p><div id="nonedata"></div></p>
<br>
<br>
<!-- =========================== -->
<!--        実務課題2            -->
<!-- =========================== -->
<h3>実務課題2</h3>
<table>
    <tbody class="datainfo">
        <!-- 項目 -->
        <tr>
            <td>id</td>
            <td>name</td>
            <td>Email</td>
        </tr>
        <!-- IDや名前のデータが削除される箇所 -->
        <% users.forEach(function(user) { %>
        <tr>
            <td><%= user.id %></td>
            <td><%= user.name %></td>
            <td><%= user.email %></td>
        </tr>
        <% }); %>
    </tbody>
</table>
<p><a href="/create">ユーザーの追加</a></p>

<!-- -------------------------------- -->
<!-- 以下、更新ボタンと削除ボタンの実装 -->
<!-- -------------------------------- -->

<!-- 更新ボタン -->
<a href="/edit/<%= value.id %>">更新</a>
<!-- 削除ボタン -->
<a href="/delete/<%= value.id %>">削除</a>

        <!--こちらに基礎課題で言われてる内容を記述しましょう。ここまで-->
        <script type="text/javascript">
            // DBに格納してる情報をオブジェクトリスト（多次元連想配列）の形で変数usersに格納している
            // ユーザー情報システムからIDで情報の取得
            //"users"の中に配列内：5個のデータが入っている。
            let users = JSON.parse('<%= JSON.stringify(users) %>'.replace(/&#34;/g, '"'));
            // console.log(users);//多重配列を表示している。
            // 参考例
            let textTag = document.getElementById('textTag');
            let NUMBER = `<%= number %>`;
            textTag.innerHTML = NUMBER;

            // ここからはapp.jsで作成した値をここでブラウザに出力するように機能を実装していきましょう。上記の参考例を元にやってみましょう。
            // 基礎課題01:画面に表示する機能作りましょう。
            //課題1
            //検索ボタンID取得
            let serach_btn = document.getElementById("serach_btn");

            //検索ボタンが押された時の処理："Sel_DBVal()""
            //テキストボックスの値がDBに存在したら出力の関数
            function Sel_DBVal() {
                //テキストボックスの値取得
                let GetID = document.getElementById("inputvalue").value;
                let data = users;
                // data[0]~[4]と入力した値が一致した場合
                if (data[0].id == GetID || data[1].id == GetID || data[2].id == GetID || data[3].id == GetID || data[4].id == GetID) {
                    //'2'を入力した場合
                    if (GetID === '2') {
                        //nameを追加する処理
                        const getNameclass = document.getElementById('addname');
                        //要素を作成
                        const adname_elem = document.createElement('p');
                        //要素の中身を指定し、追加
                        adname_elem.textContent = data[0].name;
                        getNameclass.appendChild(adname_elem);

                        //mailを追加する処理
                        const getMailclass = document.getElementById('addmail');
                        //要素を作成
                        const admail_elem = document.createElement('p');
                        //要素の中身を指定し、追加
                        admail_elem.textContent = data[0].email;
                        getMailclass.appendChild(admail_elem);
                    }
                    //'13'を入力した場合
                    if (GetID === '13') {
                        //nameを追加する処理
                        const getNameclass = document.getElementById('addname');
                        //要素を作成
                        const adname_elem = document.createElement('p');
                        //要素の中身を指定し、追加
                        adname_elem.textContent = data[1].name;
                        getNameclass.appendChild(adname_elem);

                        //mailを追加する処理
                        const getMailclass = document.getElementById('addmail');
                        //要素を作成
                        const admail_elem = document.createElement('p');
                        //要素の中身を指定し、追加
                        admail_elem.textContent = data[1].email;
                        getMailclass.appendChild(admail_elem);
                    }
                    //'15'を入力した場合
                    if (GetID === '15') {
                        //nameを追加する処理
                        const getNameclass = document.getElementById('addname');
                        //要素を作成
                        const adname_elem = document.createElement('p');
                        //要素の中身を指定し、追加
                        adname_elem.textContent = data[2].name;
                        getNameclass.appendChild(adname_elem);

                        //mailを追加する処理
                        const getMailclass = document.getElementById('addmail');
                        //要素を作成
                        const admail_elem = document.createElement('p');
                        //要素の中身を指定し、追加
                        admail_elem.textContent = data[2].email;
                        getMailclass.appendChild(admail_elem);
                    }
                    //'17'を入力した場合
                    if (GetID === '17') {
                        //nameを追加する処理
                        const getNameclass = document.getElementById('addname');
                        //要素を作成
                        const adname_elem = document.createElement('p');
                        //要素の中身を指定し、追加
                        adname_elem.textContent = data[3].name;
                        getNameclass.appendChild(adname_elem);

                        //mailを追加する処理
                        const getMailclass = document.getElementById('addmail');
                        //要素を作成
                        const admail_elem = document.createElement('p');
                        //要素の中身を指定し、追加
                        admail_elem.textContent = data[3].email;
                        getMailclass.appendChild(admail_elem);
                    }
                    //'18'を入力した場合
                    if (GetID === '18') {
                        //nameを追加する処理
                        const getNameclass = document.getElementById('addname');
                        //要素を作成
                        const ADNAME_TXT = document.createElement('p');
                        //要素の中身を指定し、追加
                        ADNAME_TXT.textContent = data[4].name;
                        getNameclass.appendChild(ADNAME_TXT);

                        //mailを追加する処理
                        const getMailclass = document.getElementById('addmail');
                        //要素を作成
                        const ADMAIL_TXT = document.createElement('p');
                        //要素の中身を指定し、追加
                        ADMAIL_TXT.textContent = data[4].email;
                        getMailclass.appendChild(ADMAIL_TXT);
                    }
                }
                // data配列に入力した値と一致するIDが無い場合
                else {
                    //"データなし"のテキストを追加（表示）
                    const nonedata = document.getElementById('nonedata');
                    //要素を作成
                    const ADNONE_TXT = document.createElement('p');
                    //要素の中身を指定し、追加
                    ADNONE_TXT.textContent = 'そのIDは存在しません！';
                    nonedata.appendChild(ADNONE_TXT);
                }
            }
            //検索ボタンが押されたら検索＆表示が実行される
            serach_btn.addEventListener("click", Sel_DBVal);

            /*
            基礎課題02,03をやる前に
            配列とオブジェクトリストをapp.jsから取得するときに以下のやり方が必要になります。
            変数名は自由に決めてください。プロパティ名についてはapp.jsでオブジェクト内に格納したプロパティ名を使用してください。
            以下使用する際は<%#の「#」部分を「=」に変更するよう気をつけてください。%>
            let 変数名 = JSON.parse('<%# JSON.stringify(プロパティ名) %>'.replace(/&#34;/g, '"'));
            */

        // 基礎課題02:HTML内にulタグを作成し、liタグでapp.jsで作成した情報を画面に表示して下さい。


        // 基礎課題03:作成したオブジェクトリストをブラウザに出力して下さい。その場合以下の様に出力して下さい。
        // 例）
        // name: s.chiba
        // email: s.chiba@gmail.com
        </script>
    </body>
</html>
